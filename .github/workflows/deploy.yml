name: Continuous deployment
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '13'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm test -- --coverage
      - name: Build website
        env:
          GTM_CODE: ${{ secrets.PRODUCTION_WEBSITE_NODE_GTM_CODE}}
        run: npm run build-website
      - uses: ansible/ansible-lint-action@master
        with:
          targets: |
            packages/andrejovo-web/deploy.yml
      - uses: docker-practice/actions-setup-docker@0.0.1
        with:
          docker_version: 19
          docker_channel: stable
      - name: Install docker
        run: sudo apt-get -y install python-docker python3-docker
      - name: Install ansible deps
        run: ansible-galaxy install -r ansible-requirements.yml
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_WEBSITE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.PRODUCTION_WEBSITE_KNOWN_HOSTS }}
      - name: Deploy to Production
        env:
          SERVER_NAME: ${{ secrets.PRODUCTION_WEBSITE_NODE_SERVER_NAME }}
          PROJECT_ENVIRONMENT: production
          GTM_CODE: ${{ secrets.PRODUCTION_WEBSITE_NODE_GTM_CODE}}
        run: |
          cd ./packages/andrejovo-web
          echo -e "[web]\n${{ secrets.PRODUCTION_WEBSITE_DEPLOY_HOST }}\n" > inventory.yml
          ansible-playbook deploy.yml -i inventory.yml
